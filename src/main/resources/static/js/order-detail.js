/**
 * –ù–û–í ORDER DETAIL MANAGER - –û–ü–†–û–°–¢–ï–ù–ê –õ–û–ì–ò–ö–ê
 * ============================================
 */
class OrderDetailManager {
    constructor() {
        this.orderId = this.getOrderId();
        this.originalData = new Map(); // –ó–∞ —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
        this.hasChanges = false;

        // –ï–ª–µ–º–µ–Ω—Ç–∏
        this.saveBtn = document.getElementById('saveChanges');
        this.resetBtn = document.getElementById('resetChanges');
        this.loadingOverlay = document.getElementById('loadingOverlay');

        // CSRF token
        this.csrfToken = document.querySelector('meta[name="_csrf"]')?.getAttribute('content');
        this.csrfHeader = document.querySelector('meta[name="_csrf_header"]')?.getAttribute('content');

        this.init();
    }

    init() {
        console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ OrderDetailManager –∑–∞ –ø–æ—Ä—ä—á–∫–∞:', this.orderId);

        // –ó–∞–ø–∞–∑–≤–∞–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
        this.saveOriginalData();

        // Setup event listeners
        this.setupQuantityControls();
        this.setupActionButtons();
        this.setupRemoveButtons();

        console.log('OrderDetailManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    }

    /**
     * –ó–∞–ø–∞–∑–≤–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞ –≤—Å–∏—á–∫–∏ –∞—Ä—Ç–∏–∫—É–ª–∏
     */
    saveOriginalData() {
        const rows = document.querySelectorAll('.item-row');
        rows.forEach(row => {
            const productId = row.dataset.productId;
            const originalQuantity = parseInt(row.dataset.originalQuantity);
            const unitPrice = parseFloat(row.dataset.unitPrice);

            this.originalData.set(productId, {
                quantity: originalQuantity,
                unitPrice: unitPrice
            });
        });

        console.log('–ó–∞–ø–∞–∑–µ–Ω–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏ –¥–∞–Ω–Ω–∏:', this.originalData);
    }

    /**
     * –ó–∞–ø–∞–∑–≤–∞ –∞–∫—Ç—É–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –æ—Ç DOM-–∞ –∫–∞—Ç–æ –Ω–æ–≤–∏ "–æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏" —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
     * –ò–∑–ø–æ–ª–∑–≤–∞ —Å–µ —Å–ª–µ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∞–∑–≤–∞–Ω–µ
     */
    saveOriginalDataFromDOM() {
        const rows = document.querySelectorAll('.item-row:not(.marked-for-removal)');
        this.originalData.clear();

        rows.forEach(row => {
            const productId = row.dataset.productId;
            const quantityInput = row.querySelector('.quantity-input');
            const currentQuantity = quantityInput ? parseInt(quantityInput.value) : parseInt(row.dataset.originalQuantity);
            const unitPrice = parseFloat(row.dataset.unitPrice);

            this.originalData.set(productId, {
                quantity: currentQuantity,
                unitPrice: unitPrice
            });

            // –û–±–Ω–æ–≤—è–≤–∞–º–µ –∏ data –∞—Ç—Ä–∏–±—É—Ç–∞
            row.dataset.originalQuantity = currentQuantity;
        });

        console.log('–ó–∞–ø–∞–∑–µ–Ω–∏ –Ω–æ–≤–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏ –¥–∞–Ω–Ω–∏:', this.originalData);
    }

    /**
     * Setup –∑–∞ quantity –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ç–µ
     */
    setupQuantityControls() {
        // Quantity input –ø—Ä–æ–º–µ–Ω–∏
        document.addEventListener('input', (e) => {
            if (e.target.matches('.quantity-input')) {
                this.handleQuantityChange(e.target);
            }
        });

        // Quantity –±—É—Ç–æ–Ω–∏ (+/-)
        document.querySelectorAll('.quantity-decrease').forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                const input = btn.closest('.quantity-input-wrapper').querySelector('.quantity-input');
                const currentValue = parseInt(input.value) || 1;
                if (currentValue > 1) {
                    input.value = currentValue - 1;
                    this.handleQuantityChange(input);
                }
            });
        });

        document.querySelectorAll('.quantity-increase').forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                const input = btn.closest('.quantity-input-wrapper').querySelector('.quantity-input');
                const currentValue = parseInt(input.value) || 1;
                if (currentValue < 9999) {
                    input.value = currentValue + 1;
                    this.handleQuantityChange(input);
                }
            });
        });
    }


    /**
     * –û–±—Ä–∞–±–æ—Ç–≤–∞ –ø—Ä–æ–º—è–Ω–∞ –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ—Ç–æ
     */
    handleQuantityChange(input) {
        const row = input.closest('.item-row');
        const productId = row.dataset.productId;
        const newQuantity = parseInt(input.value) || 1;
        const originalQuantity = this.originalData.get(productId).quantity;

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (newQuantity < 1) {
            input.value = 1;
            return;
        }
        if (newQuantity > 999) {
            input.value = 999;
            return;
        }

        // –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –æ–±—â–∞—Ç–∞ —Ü–µ–Ω–∞ –∑–∞ —Ä–µ–¥–∞
        this.updateRowTotal(row, newQuantity);

        // –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –æ–±—â–∞—Ç–∞ —Ü–µ–Ω–∞ –Ω–∞ –ø–æ—Ä—ä—á–∫–∞—Ç–∞
        this.updateOrderTotals();

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –ø—Ä–æ–º–µ–Ω–∏
        const hasChanged = newQuantity !== originalQuantity;
        row.classList.toggle('changed', hasChanged);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∏–º–∞ –æ–±—â–∏ –ø—Ä–æ–º–µ–Ω–∏
        this.checkForChanges();
    }

    /**
     * –û–±–Ω–æ–≤—è–≤–∞ –æ–±—â–∏—Ç–µ —Å—É–º–∏
     */
    updateOrderTotals() {
        let totalGross = 0;

        // –°—ä–±–∏—Ä–∞–º–µ –≤—Å–∏—á–∫–∏ —Ü–µ–Ω–∏ –æ—Ç —Ä–µ–¥–æ–≤–µ—Ç–µ
        document.querySelectorAll('.item-row:not(.marked-for-removal) .item-total').forEach(totalElement => {
            const price = parseFloat(totalElement.textContent.replace(' –ª–≤.', '')) || 0;
            totalGross += price;
        });

        // –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –Ω–µ—Ç–æ –∏ –î–î–° (20%)
        const totalNet = totalGross / 1.2;
        const totalVat = totalGross - totalNet;

        // –û–±–Ω–æ–≤—è–≤–∞–º–µ DOM –µ–ª–µ–º–µ–Ω—Ç–∏—Ç–µ
        document.getElementById('totalNet').textContent = totalNet.toFixed(2) + ' –ª–≤.';
        document.getElementById('totalVat').textContent = totalVat.toFixed(2) + ' –ª–≤.';
        document.getElementById('totalGross').textContent = totalGross.toFixed(2) + ' –ª–≤.';
    }

    /**
     * –û–±–Ω–æ–≤—è–≤–∞ –æ–±—â–∞—Ç–∞ —Ü–µ–Ω–∞ –∑–∞ –¥–∞–¥–µ–Ω —Ä–µ–¥
     */
    updateRowTotal(row, quantity) {
        const productId = row.dataset.productId;
        const unitPrice = this.originalData.get(productId).unitPrice;
        const totalPrice = (unitPrice * quantity).toFixed(2);

        const totalElement = row.querySelector('.item-total');
        totalElement.textContent = totalPrice + ' –ª–≤.';
    }

    /**
     * Setup –∑–∞ action –±—É—Ç–æ–Ω–∏—Ç–µ
     */
    setupActionButtons() {
        // –ó–∞–ø–∞–∑–∏ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ
        if (this.saveBtn) {
            this.saveBtn.addEventListener('click', () => {
                this.saveChanges();
            });
        }

        // –í—ä—Ä–Ω–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
        if (this.resetBtn) {
            this.resetBtn.addEventListener('click', () => {
                this.resetChanges();
            });
        }
    }

    /**
     * Setup –∑–∞ –±—É—Ç–æ–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ
     */
    setupRemoveButtons() {
        document.addEventListener('click', (e) => {
            if (e.target.closest('.remove-item-btn')) {
                const row = e.target.closest('.item-row');
                this.removeItem(row);
            }
        });
    }

    /**
     * –ü—Ä–µ–º–∞—Ö–≤–∞ –∞—Ä—Ç–∏–∫—É–ª (–º–∞—Ä–∫–∏—Ä–∞ –∑–∞ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ)
     */
    /**
     * –ü—Ä–µ–º–∞—Ö–≤–∞ –∞—Ä—Ç–∏–∫—É–ª (–º–∞—Ä–∫–∏—Ä–∞ –∑–∞ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ)
     */
    removeItem(row) {
        const productName = row.querySelector('.product-name').textContent;

        if (confirm(`–°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ, —á–µ –∏—Å–∫–∞—Ç–µ –¥–∞ –ø—Ä–µ–º–∞—Ö–Ω–µ—Ç–µ "${productName}" –æ—Ç –ø–æ—Ä—ä—á–∫–∞—Ç–∞?`)) {
            row.style.opacity = '0.5';
            row.style.textDecoration = 'line-through';
            row.classList.add('marked-for-removal');

            // –°–∫—Ä–∏–≤–∞–º–µ quantity –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ç–µ
            const quantityInput = row.querySelector('.quantity-input');
            if (quantityInput) {
                quantityInput.disabled = true;
            }

            this.checkForChanges();
            this.showToast('warning', '–ê—Ä—Ç–∏–∫—É–ª—ä—Ç –µ –º–∞—Ä–∫–∏—Ä–∞–Ω –∑–∞ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ. –ù–∞—Ç–∏—Å–Ω–µ—Ç–µ "–ó–∞–ø–∞–∑–∏ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ" –∑–∞ –¥–∞ –ø–æ—Ç–≤—ä—Ä–¥–∏—Ç–µ.');

            // üîµ Quick loader –∑–∞ UX
            window.universalLoader.showQuick("–ú–∞—Ä–∫–∏—Ä–∞–Ω–µ...", "–û—á–∞–∫–≤–∞ –ø–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ", 1000, "secondary");
        }
    }


    /**
     * –ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ –∏–º–∞ –ø—Ä–æ–º–µ–Ω–∏ –∏ –∞–∫—Ç–∏–≤–∏—Ä–∞/–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞ –±—É—Ç–æ–Ω–∏—Ç–µ
     */
    checkForChanges() {
        const changedRows = document.querySelectorAll('.item-row.changed');
        const removedRows = document.querySelectorAll('.item-row.marked-for-removal');

        this.hasChanges = changedRows.length > 0 || removedRows.length > 0;

        // –ê–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ/–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ –±—É—Ç–æ–Ω–∏—Ç–µ
        if (this.saveBtn) {
            this.saveBtn.disabled = !this.hasChanges;
        }
        if (this.resetBtn) {
            this.resetBtn.disabled = !this.hasChanges;
        }

        console.log('–ü—Ä–æ–º–µ–Ω–∏:', this.hasChanges, '–ü—Ä–æ–º–µ–Ω–µ–Ω–∏ —Ä–µ–¥–æ–≤–µ:', changedRows.length, '–ü—Ä–µ–º–∞—Ö–Ω–∞—Ç–∏:', removedRows.length);
    }

    /**
     * –ó–∞–ø–∞–∑–≤–∞ –≤—Å–∏—á–∫–∏ –ø—Ä–æ–º–µ–Ω–∏ —Å –µ–¥–∏–Ω API call
     */

    async saveChanges() {
        if (!this.hasChanges) {
            this.showToast('info', '–ù—è–º–∞ –ø—Ä–æ–º–µ–Ω–∏ –∑–∞ –∑–∞–ø–∞–∑–≤–∞–Ω–µ.');
            return;
        }

        const items = [];
        const rows = document.querySelectorAll('.item-row:not(.marked-for-removal)');

        rows.forEach(row => {
            const productId = parseInt(row.dataset.productId);
            const quantityInput = row.querySelector('.quantity-input');
            const quantity = quantityInput ? parseInt(quantityInput.value) : parseInt(row.dataset.originalQuantity);

            items.push({
                productId: productId,
                quantity: quantity
            });
        });

        console.log('–ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –ø—Ä–æ–º–µ–Ω–∏:', items);

        try {
            // üîµ –ü–æ–∫–∞–∑–≤–∞–º–µ Universal Loader
            window.universalLoader.show("–ó–∞–ø–∞–∑–≤–∞–Ω–µ...", "–ú–æ–ª—è –∏–∑—á–∞–∫–∞–π—Ç–µ", "primary", "save");

            const response = await fetch(`/api/orders/${this.orderId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    [this.csrfHeader]: this.csrfToken
                },
                body: JSON.stringify({ items: items })
            });

            const result = await response.json();

            if (result.success) {
                this.handleSuccessResponse(result);
            } else {
                this.handleErrorResponse(result);
            }

        } catch (error) {
            console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∞–∑–≤–∞–Ω–µ:', error);
            this.showToast('error', '–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∞–∑–≤–∞–Ω–µ—Ç–æ. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.');
        } finally {
            // üü¢ –°–∫—Ä–∏–≤–∞–º–µ Universal Loader
            window.universalLoader.hide();
        }
    }


    /**
     * –û–±—Ä–∞–±–æ—Ç–≤–∞ —É—Å–ø–µ—à–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –æ—Ç —Å—ä—Ä–≤—ä—Ä–∞
     */
    handleSuccessResponse(result) {
        // –û—Å–Ω–æ–≤–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ —É—Å–ø–µ—Ö
        if (result.updatedItems && result.updatedItems.length > 0) {
            this.showToast('success', `–ü–æ—Ä—ä—á–∫–∞—Ç–∞ –≤–∏ –µ –æ–±–Ω–æ–≤–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ !`);
        }

        // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∑–∞ –∞—Ä—Ç–∏–∫—É–ª–∏ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç—ä—á–Ω–∞ –Ω–∞–ª–∏—á–Ω–æ—Å—Ç
        if (result.warnings && result.warnings.length > 0) {
            result.warnings.forEach(warning => {
                this.showToast('warning', warning.message);
            });
        }

        // –ê–∫–æ –∏–º–∞ –æ–±—â–∏ —Å—É–º–∏, –≥–∏ –æ–±–Ω–æ–≤—è–≤–∞–º–µ
        if (result.totals) {
            this.updateTotals(result.totals);
        }

        // üü¢ –ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–º–µ –∞—Ä—Ç–∏–∫—É–ª–∏—Ç–µ –æ—Ç –±–µ–∫–µ–Ω–¥–∞
        this.reloadItems();
    }

    /**
     * –ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞ –∞—Ä—Ç–∏–∫—É–ª–∏—Ç–µ –æ—Ç –±–µ–∫–µ–Ω–¥–∞ –∏ –æ–±–Ω–æ–≤—è–≤–∞ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞
     */
    async reloadItems() {
        try {
            window.universalLoader.show("–ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ...", "–ú–æ–ª—è –∏–∑—á–∞–∫–∞–π—Ç–µ", "secondary", "refresh");

            const response = await fetch(`/api/orders/${this.orderId}/items`, {
                headers: {
                    [this.csrfHeader]: this.csrfToken
                }
            });

            const itemsHtml = await response.text();

            // –ó–∞–º–µ—Å—Ç–≤–∞ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞ —Å –Ω–æ–≤ HTML –æ—Ç –±–µ–∫–µ–Ω–¥–∞
            const container = document.getElementById('orderItemsContainer');
            if (container) {
                container.innerHTML = itemsHtml;
            }

            // –†–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ event listeners –∏ originalData
            this.saveOriginalDataFromDOM();
            this.checkForChanges();
            this.setupQuantityControls();
            this.setupActionButtons();
            this.setupRemoveButtons();

        } catch (error) {
            console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∞—Ä—Ç–∏–∫—É–ª–∏:', error);
            this.showToast('error', '–ù–µ—É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∞—Ä—Ç–∏–∫—É–ª–∏—Ç–µ.');
        } finally {
            window.universalLoader.hide();
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–≤–∞ –≥—Ä–µ—à–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –æ—Ç —Å—ä—Ä–≤—ä—Ä–∞
     */
    handleErrorResponse(result) {
        if (result.errors && result.errors.length > 0) {
            result.errors.forEach(error => {
                this.showToast('error', error.message);
            });
        } else {
            this.showToast('error', result.message || '–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∞–∑–≤–∞–Ω–µ—Ç–æ.');
            this.resetChanges();
        }
    }

    /**
     * –û–±–Ω–æ–≤—è–≤–∞ –æ–±—â–∏—Ç–µ —Å—É–º–∏ –≤ UI
     */
    updateTotals(totals) {
        const totalNetElement = document.getElementById('totalNet');
        const totalVatElement = document.getElementById('totalVat');
        const totalGrossElement = document.getElementById('totalGross');

        if (totalNetElement && totals.totalNet !== undefined) {
            totalNetElement.textContent = totals.totalNet.toFixed(2) + ' –ª–≤.';
        }
        if (totalVatElement && totals.totalVat !== undefined) {
            totalVatElement.textContent = totals.totalVat.toFixed(2) + ' –ª–≤.';
        }
        if (totalGrossElement && totals.totalGross !== undefined) {
            totalGrossElement.textContent = totals.totalGross.toFixed(2) + ' –ª–≤.';
        }
    }

    /**
     * –í—Ä—ä—â–∞ –≤—Å–∏—á–∫–∏ –ø—Ä–æ–º–µ–Ω–∏ –∫—ä–º –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
     */
    resetChanges() {
        const rows = document.querySelectorAll('.item-row');

        rows.forEach(row => {
            const productId = row.dataset.productId;
            const originalData = this.originalData.get(productId);

            // –í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ—Ç–æ
            const quantityInput = row.querySelector('.quantity-input');
            if (quantityInput) {
                quantityInput.value = originalData.quantity;
                quantityInput.disabled = false;
            }

            // –í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –æ–±—â–∞—Ç–∞ —Ü–µ–Ω–∞
            this.updateRowTotal(row, originalData.quantity);

            // –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ change –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏—Ç–µ
            row.classList.remove('changed', 'marked-for-removal');
            row.style.opacity = '';
            row.style.textDecoration = '';
        });

        this.checkForChanges();
        this.showToast('info', '–í—Å–∏—á–∫–∏ –ø—Ä–æ–º–µ–Ω–∏ —Å–∞ –≤—ä—Ä–Ω–∞—Ç–∏ –∫—ä–º –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏.');
    }


    /**
     * –ü–æ–ª—É—á–∞–≤–∞ ID –Ω–∞ –ø–æ—Ä—ä—á–∫–∞—Ç–∞ –æ—Ç URL
     */
    getOrderId() {
        const pathParts = window.location.pathname.split('/');
        return pathParts[pathParts.length - 1];
    }

    /**
     * –ü–æ–∫–∞–∑–≤–∞ toast —Å—ä–æ–±—â–µ–Ω–∏–µ
     */
    showToast(type, message, title = '') {
        if (window.toastManager) {
            window.toastManager[type](message, title);
        } else {
            console.log(`${type.toUpperCase()}: ${title} - ${message}`);
            alert(`${title ? title + ': ' : ''}${message}`);
        }
    }
}

// ==========================================
// INITIALIZATION
// ==========================================

document.addEventListener('DOMContentLoaded', function() {
    console.log('Order Detail —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞—Ä–µ–¥–µ–Ω–∞');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–º–µ —Å–∞–º–æ –∞–∫–æ –∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∏
    const editableInputs = document.querySelectorAll('.quantity-input');
    if (editableInputs.length > 0) {
        window.orderDetailManager = new OrderDetailManager();
        console.log('OrderDetailManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ');
    } else {
        console.log('–ü–æ—Ä—ä—á–∫–∞—Ç–∞ –Ω–µ –º–æ–∂–µ –¥–∞ —Å–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞ - OrderDetailManager –Ω–µ –µ –Ω—É–∂–µ–Ω');
    }
});