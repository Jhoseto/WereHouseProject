/**
 * –£–ù–ò–í–ï–†–°–ê–õ–ï–ù LOADING SPINNER MANAGER - SmolyanVote
 * ===============================================
 */

class UniversalLoader {
    constructor() {
        this.overlay = null;
        this.container = null;
        this.spinner = null;
        this.textElement = null;
        this.subtextElement = null;
        this.isActive = false;
        this.currentOperation = null;

        this.createElements();
    }

    /**
     * –°—ä–∑–¥–∞–≤–∞ DOM –µ–ª–µ–º–µ–Ω—Ç–∏—Ç–µ –∑–∞ —Å–ø–∏–Ω–µ—Ä–∞
     */
    createElements() {
        // –û—Å–Ω–æ–≤–µ–Ω overlay
        this.overlay = document.createElement('div');
        this.overlay.className = 'universal-loader-overlay';
        this.overlay.id = 'universalLoaderOverlay';

        // Container
        this.container = document.createElement('div');
        this.container.className = 'universal-loader-container';

        // Spinner
        this.spinner = document.createElement('div');
        this.spinner.className = 'universal-spinner';

        // Text elements
        this.textElement = document.createElement('p');
        this.textElement.className = 'universal-loader-text';
        this.textElement.textContent = '–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...';

        this.subtextElement = document.createElement('p');
        this.subtextElement.className = 'universal-loader-subtext';
        this.subtextElement.textContent = '–ú–æ–ª—è –∏–∑—á–∞–∫–∞–π—Ç–µ';

        // –°—ä—Å—Ç–∞–≤—è–Ω–µ
        this.container.appendChild(this.spinner);
        this.container.appendChild(this.textElement);
        this.container.appendChild(this.subtextElement);
        this.overlay.appendChild(this.container);

        // –î–æ–±–∞–≤—è–Ω–µ –∫—ä–º DOM
        document.body.appendChild(this.overlay);

        // Event listeners
        this.setupEventListeners();
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ event listeners
     */
    setupEventListeners() {
        // ESC –∫–ª–∞–≤–∏—à –∑–∞ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ (—Å–∞–º–æ –∞–∫–æ –Ω–µ –µ critical –æ–ø–µ—Ä–∞—Ü–∏—è)
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isActive && !this.isCriticalOperation()) {
                this.hide();
            }
        });

        // –ë–ª–æ–∫–∏—Ä–∞ —Å–∫—Ä–æ–ª–∏–Ω–≥–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–µ–Ω loader
        this.overlay.addEventListener('wheel', (e) => {
            e.preventDefault();
        }, { passive: false });
    }

    /**
     * –ü–æ–∫–∞–∑–≤–∞ loader —Å fullscreen overlay
     * @param {string} text - –û—Å–Ω–æ–≤–µ–Ω —Ç–µ–∫—Å—Ç
     * @param {string} subtext - –î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–µ–Ω —Ç–µ–∫—Å—Ç
     * @param {string} variant - –í–∞—Ä–∏–∞–Ω—Ç –Ω–∞ —Å–ø–∏–Ω–µ—Ä–∞ (primary, secondary, accent)
     * @param {string} operation - –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞ tracking
     */
    show(text = '–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...', subtext = '–ú–æ–ª—è –∏–∑—á–∞–∫–∞–π—Ç–µ', variant = 'primary', operation = 'generic') {
        if (this.isActive) return;

        this.isActive = true;
        this.currentOperation = operation;

        // –ó–∞–¥–∞–≤–∞ —Ç–µ–∫—Å—Ç–æ–≤–µ—Ç–µ
        this.textElement.textContent = text;
        this.subtextElement.textContent = subtext;

        // –ó–∞–¥–∞–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞ —Å–ø–∏–Ω–µ—Ä–∞
        this.spinner.className = `universal-spinner ${variant}`;

        // –ü–æ–∫–∞–∑–≤–∞ —Å –∞–Ω–∏–º–∞—Ü–∏—è
        requestAnimationFrame(() => {
            this.overlay.classList.add('active');
        });

        // –ë–ª–æ–∫–∏—Ä–∞ —Å–∫—Ä–æ–ª–∏–Ω–≥–∞
        document.body.style.overflow = 'hidden';
        document.body.classList.add('loading-disabled');

        console.log(`üîÑ Warehouse Loader: ${operation} - ${text}`);
    }

    /**
     * –°–∫—Ä–∏–≤–∞ loader —Å –ø–ª–∞–≤–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è
     * @param {number} delay - –ó–∞–±–∞–≤—è–Ω–µ –ø—Ä–µ–¥–∏ —Å–∫—Ä–∏–≤–∞–Ω–µ (ms)
     */
    hide(delay = 0) {
        if (!this.isActive) return;

        setTimeout(() => {
            this.overlay.classList.remove('active');

            // –ü–æ—á–∏—Å—Ç–≤–∞ —Å–ª–µ–¥ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞
            setTimeout(() => {
                this.isActive = false;
                this.currentOperation = null;
                document.body.style.overflow = '';
                document.body.classList.remove('loading-disabled');
            }, 400);

            console.log('‚úÖ Warehouse Loader: Hidden');
        }, delay);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ loader-—ä—Ç –µ –∞–∫—Ç–∏–≤–µ–Ω
     */
    isShowing() {
        return this.isActive;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ —Ç–µ–∫—É—â–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –µ –∫—Ä–∏—Ç–∏—á–Ω–∞ (–Ω–µ –º–æ–∂–µ –¥–∞ —Å–µ –ø—Ä–µ–∫—ä—Å–Ω–µ)
     */
    isCriticalOperation() {
        const criticalOps = ['checkout', 'payment', 'save', 'delete'];
        return criticalOps.includes(this.currentOperation);
    }

    /**
     * –ë—ä—Ä–∑–∞ –æ–ø–µ—Ä–∞—Ü–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫—Ä–∏–≤–∞–Ω–µ
     * @param {string} text
     * @param {string} subtext
     * @param {number} duration
     * @param {string} variant
     */
    showQuick(text, subtext = '', duration = 1500, variant = 'primary') {
        this.show(text, subtext, variant, 'quick');
        this.hide(duration);
    }

    /**
     * –ü–æ–∫–∞–∑–≤–∞ loader –∑–∞ –∫–æ–ª–∏—á–∫–∞—Ç–∞
     */
    showCart(operation = 'add') {
        const messages = {
            add: ['–î–æ–±–∞–≤—è–Ω–µ –≤ –∫–æ–ª–∏—á–∫–∞—Ç–∞...', '–û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ—Ç–æ'],
            update: ['–û–±–Ω–æ–≤—è–≤–∞–Ω–µ...', '–ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ'],
            remove: ['–ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ...', '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –æ—Ç –∫–æ–ª–∏—á–∫–∞—Ç–∞'],
            load: ['–ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫–æ–ª–∏—á–∫–∞—Ç–∞...', '–ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏']
        };

        const [text, subtext] = messages[operation] || messages.add;
        this.show(text, subtext, 'secondary', `cart_${operation}`);
    }



    /**
     * –£–Ω–∏—â–æ–∂–∞–≤–∞ loader-–∞ –∏ –ø–æ—á–∏—Å—Ç–≤–∞ —Ä–µ—Å—É—Ä—Å–∏—Ç–µ
     */
    destroy() {
        if (this.overlay && this.overlay.parentNode) {
            this.overlay.parentNode.removeChild(this.overlay);
        }
        this.isActive = false;
        document.body.style.overflow = '';
        document.body.classList.remove('loading-disabled');
    }
}

/**
 * UTILITY FUNCTIONS - –ó–∞ –ª–µ—Å–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
 * ======================================
 */

/**
 * –î–æ–±–∞–≤—è loading —Å—ä—Å—Ç–æ—è–Ω–∏–µ –∫—ä–º –±—É—Ç–æ–Ω
 * @param {HTMLElement} button
 * @param {boolean} loading
 */
function setButtonLoading(button, loading) {
    if (!button) return;

    if (loading) {
        button.classList.add('btn-loading');
        button.disabled = true;
        button.dataset.originalText = button.innerHTML;
    } else {
        button.classList.remove('btn-loading');
        button.disabled = false;
        if (button.dataset.originalText) {
            button.innerHTML = button.dataset.originalText;
            delete button.dataset.originalText;
        }
    }
}

/**
 * –î–æ–±–∞–≤—è loading —Å—ä—Å—Ç–æ—è–Ω–∏–µ –∫—ä–º –ø–∞–Ω–µ–ª
 * @param {HTMLElement} panel
 * @param {boolean} loading
 */
function setPanelLoading(panel, loading) {
    if (!panel) return;

    if (loading) {
        panel.classList.add('loading-disabled');

        // –î–æ–±–∞–≤—è spinner –∞–∫–æ –Ω—è–º–∞
        if (!panel.querySelector('.panel-spinner')) {
            const spinner = document.createElement('div');
            spinner.className = 'panel-spinner';
            spinner.style.position = 'absolute';
            spinner.style.top = '50%';
            spinner.style.left = '50%';
            spinner.style.transform = 'translate(-50%, -50%)';
            spinner.style.zIndex = '1000';

            panel.style.position = 'relative';
            panel.appendChild(spinner);
        }
    } else {
        panel.classList.remove('loading-disabled');

        // –ü—Ä–µ–º–∞—Ö–≤–∞ spinner
        const spinner = panel.querySelector('.panel-spinner');
        if (spinner) {
            spinner.remove();
        }
    }
}

/**
 * INITIALIZATION - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –ø—Ä–∏ load
 * ==============================================
 */
document.addEventListener('DOMContentLoaded', function() {
    // –°—ä–∑–¥–∞–≤–∞ –≥–ª–æ–±–∞–ª–µ–Ω instance
    if (!window.universalLoader) {
        window.universalLoader = new UniversalLoader();
        console.log('‚úì Universal Loader initialized for Warehouse Portal');
    }
});

// Export –∑–∞ –º–æ–¥—É–ª–Ω–∞ —É–ø–æ—Ç—Ä–µ–±–∞
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { UniversalLoader, setButtonLoading, setPanelLoading };
}